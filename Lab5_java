public class Main {

    public static void main(String[] args) {

        Integer intArray[] = {5, 10, 9, 101};
        Byte byteArray[] = {5, 10, 9, 101};

        Sort<Integer> intSort = new Sort<>();
        intSort.heapSort(intArray);

        for (Integer a : intArray) {
            System.out.print(a + " ");
        }

        System.out.println();

        Sort<Byte> byteSort = new Sort<>();
        byteSort.heapSort(byteArray);

        for (Byte a : byteArray) {
            System.out.print(a + " ");
        }

    }
}

class Sort < T extends Number > {
        public T[] heapSort(T[] arr){
            if (arr.length == 0) return null;
            int n = arr.length;
            int i = (int) Math.floor(n/2), j, k;
            Number t;
            while (true){
                if (i > 0) t = arr[--i];
                else{ n--;
                    if (n == 0) return arr;
                    t = arr[n];
                    arr[n] = arr[0];
                }
                j = i;
                k = j*2+1;
                while (k < n){
                    if (k+1 < n && arr[k+1].doubleValue() > arr[k].doubleValue()) k++;
                    if (arr[k].doubleValue() > t.doubleValue()){
                        arr[j] = arr[k];  j = k;  k = j*2+1;
                    }
                    else break;
                }
                arr[j] = (T) t;
            }
        }
}
